@use 'utils' as utils;
@use 'palette' as pal;
@use '@angular/material' as mat;

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// To remove the warning for duplicated theme definitions.
// see: https://github.com/angular/components/blob/main/guides/duplicate-theming-styles.md
mat.$theme-ignore-duplication-warnings: true;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Dark theme
$nx-storybook-angular-material-primary-dark: mat.define-palette(pal.$primary-palette);
$nx-storybook-angular-material-accent-dark: mat.define-palette(
  pal.$accent-palette,
  A200,
  A100,
  A400
);

// Light theme
$nx-storybook-angular-material-primary-light: mat.define-palette(mat.$indigo-palette);
$nx-storybook-angular-material-accent-light: mat.define-palette(pal.$primary-palette);

// The warn palette is optional (defaults to red).
$nx-storybook-angular-material-warn: mat.define-palette(pal.$warn-palette);

// Typography
// See: https://material.angular.io/guide/typography
$nx-storybook-angular-material-typography: mat.define-typography-config(
  $font-family: theme('fontFamily.mono'),
  //$headline: mat.typography-level(96px, 112px, 300),
  //$subtitle-1: mat.typography-level(60px, 72px, 300),
  //$subtitle-2: mat.typography-level(48px, 56px, 400),
  //$body-1: mat.typography-level(24px, 32px, 400),
  //$body-2: mat.typography-level(20px, 28px, 400),
  //$button: mat.typography-level(14px, 14px, 500),
  //$caption: mat.typography-level(12px, 12px, 400),
  //$overline: mat.typography-level(10px, 10px, 500),
);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$nx-storybook-angular-material-theme: mat.define-dark-theme(
  (
    color: (
      primary: $nx-storybook-angular-material-primary-dark,
      accent: $nx-storybook-angular-material-accent-dark,
      warn: $nx-storybook-angular-material-warn,
    ),
    // Only include `typography` and `density` in the default dark theme.
    typography: $nx-storybook-angular-material-typography,
    density: 0,
  )
);

// Light theme
$theme-light: mat.define-light-theme(
  (
    color: (
      primary: $nx-storybook-angular-material-primary-light,
      accent: $nx-storybook-angular-material-accent-light,
      warn: $nx-storybook-angular-material-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.core-theme($nx-storybook-angular-material-theme);
@include mat.all-component-themes($nx-storybook-angular-material-theme);
@include utils.color($nx-storybook-angular-material-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.core-theme($theme-light);
  @include mat.all-component-themes($theme-light);
  @include utils.color($theme-light);
}

// Apply typography to all components
@include mat.all-component-typographies($nx-storybook-angular-material-typography);
